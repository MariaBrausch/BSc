[
  {
    "id": "ea7-1-a",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Nennen Sie Anforderungen im Bereich Smart City",
    "musterloesung":"Verteilte Sensoren, teils innerhalb Gebäude, Straßen oder Laternen verbaut. Lebensdauer mehrere Jahre (teilweise ohne externe Stromversorgung). Jeder Sensor sendet periodisch kleine Datenmengen. "
  },
  {
    "id": "ea7-1-b",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Weswegen könnte es nachteilig sein, verteilte Sensoren (z.B. im Bereich Smart City) über Mobilfunk zu verbinden? ",
    "musterloesung":"Mobilfunkeinheiten benötigen im Vergleich zu anderen Technologien viel Energie. Jeder Sensor muss über eine eigene SIM-Karte verfügen. Austausch des Mobilfunkanbieters benötigt einen Wechsel der SIM-Karte in jedem Sensorknoten. Dies ist evtl. nicht möglich. "
  },
  {
    "id": "ea7-2-a",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Nennen Sie den Grund, weswegen in einem WLAN-Netzwerk die Latenz schwanken kann. ",
    "musterloesung":"In einem WLAN senden die Teilnehmer sobald Daten verfügbar sind. Senden viele andere Stationen, kann es lange dauern, bis der Funkkanal frei wird. Abhängig von der Auslastung verändert sich somit die Latenz. "
  },
  {
    "id": "ea7-2-b",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Hat die schwankende Latenz in WLAN eine praktische Auswirkung? ",
    "musterloesung":"Nicht für alltägliche Dinge wie Websurfen, Streaming von Videos oder E-Mail. Zeitkritische Anwendungen sind mit einem WLAN allerdings nicht umsetzbar. Ein Roboter, der beispielsweise regelmäßige Steuersignale erwartet kann durch die zeitlich nicht gleichmäßig eintreffenden Daten nicht fehlerfrei gesteuert werden. Beispiel: Ein Roboter erwartet Steuerdaten mit 100Hz. WLAN verzögert einige Pakete um wenige ms. Hierdurch sinkt die Frequenz der eintreffenden Steuerdaten zu stark und der Roboter schaltet ab. "
  },
  {
    "id": "ea7-3-a",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Ein häufig genannter Anwendungsfall von 5G Netzwerken ist das autonome Fahren. Was sind in diesem Bereich einige der Herausforderungen? ",
    "musterloesung":"Die Informationen der Sensoren eines Autos oder mehrere Autos sollen mit geringer Latenz aggregiert und wieder an andere Fahrzeuge gesandt werden.  "
  },
  {
    "id": "ea7-3-b",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Würde für das autonome Fahren nicht auch ein 4G Netz ausreichen? ",
    "musterloesung":" Für nicht zeitkritische Anwendungen ja. Soll ein Fahrzeug oder eine Fahrzeugflotte von einem externen System gesteuert werden, muss diese Steuerinstanz so nahe wie möglich an den Basisstationen liegen. Nur hierdurch ist eine geringe Latenz umsetzbar. In einem 4G Netz ist dies nicht vorgesehen. In 5G Netzwerken ist angedacht, dass kleine „Cloud-Systeme“ mit jeder Basisstation verbunden sein können. Diese Mobile Edge Cloud Systeme können eine geringe Latenz zu den verbundenen Teilnehmern erst möglich machen. "
  },
    {
    "id": "ea7-3-c",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Wie kann die nächstgelegene MEC ausfindig gemacht werden?",
    "musterloesung":"Lösung: Es gibt mehrere denkbare Optionen. Eine Option ist es, für die verteilte Anwendung in der MEC eine feste IP-Adresse zu hinterlegen. Diese IP-Adresse wird nicht in das Internet geroutet, sondern nur innerhalb des Netzes des Mobilfunkanbieters. Jede UPF routet die gleiche IP-Adresse an die nächste MEC. Eine weitere Möglichkeit ist das Auffinden über DNS. Hierbei stellt jede UPF einen DNS-Server bereit. Dieser leitet „normale“ DNS-Anfragen wie gewöhnlich weiter. DNS-Anfragen, welche jedoch auf einen Dienst innerhalb der MEC zeigen, werden direkt mit der IP-Adresse der nächsten MEC aufgelöst. Die dritte vorgeschlagene Lösung: Die Anwendung selbst besitzt eine Datenbank. Ruft ein Endgerät einen Dienst auf, welcher auf mehreren MEC verteilt ist, leitet die Anwendung das Endgerät über HTTP-Redirect (oder einen anderen, eigenen Ansatz) zur IP-Adresse oder zum Domainnamen der nächsten MEC."
  },
  {
    "id": "ea7-4-a",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Weswegen belastet eine Container-Anwendung den Host weniger als eine Anwendung in einer VM? ",
    "musterloesung":"Eine VM bedeutet, dass ein gesamter PC virtualisiert wird. Darin wird ein Betriebssystem gestartet. Erst darauf kann die eigentliche Anwendung gestartet werden. Das Betriebssystem beansprucht Arbeitsspeicher, Festplattenplatz und CPU-Zyklen, welche nicht der Anwendung zugutekommen. In einem Container wird lediglich die Software gestartet, welche zur Anwendung gehört. Es muss kein zusätzliches Betriebssystem gestartet werden. Zusätzlich muss für eine VM vorab die Anzahl der CPUs, des Arbeitsspeichers und des Festplattenspeichers bekannt sein. Ein Container hingegen kann (dynamisch) die Ressourcen des darunterliegenden Betriebssystems nutzen. "
  },
  {
    "id": "ea7-4-b",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Wie lässt sich eine Anwendung als Container starten? ",
    "musterloesung":"Es muss zuerst ein Container-Image erstellt werden. In Docker ist dies über eine Textdatei möglich. Hierin ist beschrieben, welche Dateien in das Image kopiert werden, welche Befehle ausgeführt werden sollen, um das fertige Image zu bauen, und welche Funktionen von anderen Images eingebunden werden sollen. Die Dateien, welche die Anwendung sind müssen in das Image kopiert werden. Die auszuführende Datei muss angegeben werden. Ist das Image erstellt muss es innerhalb eines Containers gestartet werden. Hierbei wird die zu ausführende Datei gestartet. "
  },
  {
    "id": "ea7-4-c",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Was bedeutet Container-Orchestrierung? ",
    "musterloesung":"Dies bedeutet, dass Container und Images nicht manuell erstellt und gestartet werden. Stattdessen wird dies von der Orchestrierungslösung übernommen. Hierbei kann die Orchestrierungslösung eine beliebige Anzahl von Containern automatisiert auf einen oder mehrere Hosts übertragen und starten. "
  },
  {
    "id": "ea7-5-a",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Was bedeutet Software Defined Networking? ",
    "musterloesung":"Der Begriff bedeutet, dass Netzwerkkomponenten (Router, Switche, Firewall, …) über einen zentralen Controller gesteuert werden. Durch diesen Controller lässt sich das Netzwerk programmieren. Hierdurch sind Automatisierungslösungen denkbar, sodass ein Netzwerk bei neuen Anwendungen (z.B. durch eine Orchestrierungslösung) ebenfalls neu konfiguriert wird. "
  },
  {
    "id": "ea7-5-b",
    "task_type": "FREITEXT",
    "aufgabenstellung": "Wie ermöglicht TOR eine anonyme Kommunikation im Internet? ",
    "musterloesung":"TOR baut verschlüsselte Tunnel zu Routern auf. Die Router entschlüsseln die Daten wieder und leiten sie von Ihrer IP-Adresse weiter in das Internet. Ein TOR-Client baut eine Route bestehend aus drei TOR-Routern auf. Zu jedem Router wird eine eigene verschlüsselte Verbindung hergestellt. Wird ein IP-Paket vom Clienten übertragen, „lernen“ die einzelnen Router nur die Information, dass vom direkten Nachbarn etwas gesendet wurde und an welchen Punkt das Paket weitergeroutet wird. Wegen der mehrfachen Verschlüsselung kann nur der letzte TOR-Router die eigentlich übertragenen Daten sehen. Der letzte Router weiß jedoch nicht, von wem die Daten stammen. Innerhalb des TOR-Netzwerkes werde eigene Adressen vergeben."
  }
]
